---
- name: Encryption keys | Get encrypted pools
  ansible.builtin.set_fact:
    zfs_encrypted_pools: >-
      {{ zfs_pools | selectattr('options', 'defined') | selectattr('options', 'search', 'keylocation') | map(attribute='name') | list }}
  when: zfs_create_pools

- name: Encryption keys | Get encrypted datasets
  ansible.builtin.set_fact:
    zfs_encrypted_datasets: "{% set output = [] %}\
        {% for filesystem in zfs_filesystems %}\
          {% if filesystem.keylocation is defined  %}\
            {{ output.append(filesystem.pool + '\\\\' + filesystem.name) }}\
          {% endif %}\
        {% endfor %}\
      {{ output }}"
  when: zfs_create_filesystems

- name: Encryption keys | Create key-load service unit file
  ansible.builtin.template:
    src: etc/systemd/system/zfs-load-key@.service.j2
    dest: /etc/systemd/system/zfs-load-key@.service
    owner: root
    group: root
    mode: "0644"
  when: zfs_encrypted_pools or zfs_encrypted_datasets

- name: Encryption keys | Copy over load-key script
  ansible.builtin.copy:
    src: zfs-load-key.sh
    dest: "{{ zfs_autoload_encryption_script_path }}"
    owner: root
    group: root
    mode: "0644"
  when: zfs_encrypted_pools or zfs_encrypted_datasets

- name: Encryption keys | Activate key-load service for encrypted pools
  ansible.builtin.systemd_service:
    name: zfs-load-key@{{ item }}
    enabled: true
  loop: "{{ zfs_encrypted_pools }}"
  when: zfs_create_pools and (zfs_encrypted_pools|length > 0)

- name: Encryption keys | Activate key-load service for encrypted datasets
  ansible.builtin.systemd_service:
    name: zfs-load-key@{{ item }}
    enabled: true
  loop: "{{ zfs_encrypted_datasets }}"
  when: zfs_create_filesystems and (zfs_encrypted_datasets|length > 0)
